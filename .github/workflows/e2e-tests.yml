# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: E2E Tests CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: nanasess/setup-chromedriver@v1
        with:
          # Optional: do not specify to match Chrome's version
          chromedriver-version: '88.0.4324.96'
      - run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

      - uses: actions/checkout@v3

      - name: Install dependencies
        run: yarn

      - name: install selenium webdrivers
        run: |
          yarn run selenium-standalone install --config ./selenium-standalone.config.js
          sudo apt-get update
          sudo apt-get --only-upgrade install google-chrome-stable
          google-chrome --version

      - name: Setup chrome browser
        uses: browser-actions/setup-chrome@99.0.4844.51

      - name: Chrome version
        run: chrome --version

      - uses: aviate-labs/setup-dfx@v0.2.3
        with:
          dfx-version: 0.9.3
        env:
          DFX_IDENTITY_PEM: ${{ secrets.GH_MP_ADMIN_PEM }}

      - name: Deploy to local replica
        run: |
          dfx start --clean --background
          dfx deploy

        env:
          FRONTEND_MODE: production
          BACKEND_MODE: DEV
          II_MODE: production
          DFX_NETWORK: dev
          IDENTITY_MANAGER_CANISTER_ID_DEV: ${{secrets.DEV_CANISTER_ID_IDENTITY_MANAGER}}
          PUB_SUB_CHANNEL_CANISTER_ID_DEV: ${{secrets.PROD_CANISTER_ID_PUB_SUB_CHANNEL}}
          INTERNET_IDENTITY_CANISTER_ID_DEV: ${{secrets.PROD_CANISTER_ID_INTERNET_IDENTITY}}
          AWS_VERIFY_PHONENUMBER: ${{secrets.DEV_AWS_VERIFY_PHONENUMBER}}
          USERGEEK_API_KEY: ${{secrets.PROD_USERGEEK_API_KEY}}

      - name: Running E2E test
        run: npx wdio wdio.conf.ts

      - name: Shut down
        run: dfx stop

      - name: Generate HTML Report
        if: always()
        run: yarn generate-cucumber-html-report

      - name: Final Test Reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: wdio-report
          path: test/reporter
