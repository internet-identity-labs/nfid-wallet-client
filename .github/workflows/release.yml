name: Deployment
on:
  workflow_dispatch:

jobs:
  check-secrets:
    defaults:
      run:
        shell: bash

    runs-on: ubuntu-latest

    steps:
      - name: Checkout CI repo.
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: internet-identity-labs/ci_libs
          ref: main
          path: ci_libs

      - name: Check secrets
        run: |
          source ./ci_libs/CI_LIBS.sh
          JSON='${{ toJSON(env) }}'
          ci_check_secrets "${JSON}"
        env:
          USERGEEK_API_KEY: ${{secrets.PROD_USERGEEK_API_KEY}}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT_NFID }}
          SENTRY_LOG_LEVEL: ${{ secrets.SENTRY_LOG_LEVEL }}
          CURRCONV_TOKEN: ${{secrets.CURRCONV_TOKEN}}
          ETHERSCAN_API_KEY: ${{secrets.ETHERSCAN_API_KEY}}
          GOERLI_ALCHEMY_API_KEY: ${{secrets.GOERLI_ALCHEMY_API_KEY}}
          RARIBLE_X_API_KEY: ${{secrets.RARIBLE_X_API_KEY}}
          PROD_RARIBLE_X_API_KEY: ${{secrets.PROD_RARIBLE_X_API_KEY}}
          ETH_ALCHEMY_API_KEY: ${{secrets.ETH_ALCHEMY_API_KEY}}
          MATIC_ALCHEMY_API_KEY: ${{secrets.MATIC_ALCHEMY_API_KEY}}
          MUMBAI_ALCHEMY_API_KEY: ${{secrets.MUMBAI_ALCHEMY_API_KEY}}
          RAMP_WALLET_API_KEY: ${{secrets.RAMP_WALLET_API_KEY}}
          PSYCHEDELIC_GH_NPM_REGISTRY: ${{secrets.PSYCHEDELIC_GH_NPM_REGISTRY}}
          BLOCK_CYPHER_TOKEN: ${{secrets.BLOCK_CYPHER_TOKEN}}

  deploy:
    needs: check-secrets
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"

      - uses: aviate-labs/setup-dfx@v0.2.4
        with:
          dfx-version: 0.13.1
          dfx-disable-encryption: true
        env:
          DFX_IDENTITY_PEM: ${{ secrets.GH_MP_ADMIN_PEM }}

      - name: NFID FRONTEND | install & format check
        run: |
          cat > ~/.npmrc << EOF
          @psychedelic:registry=https://npm.pkg.github.com
          //npm.pkg.github.com/:_authToken=${PSYCHEDELIC_GH_NPM_REGISTRY}
          EOF
          yarn
        env:
          PSYCHEDELIC_GH_NPM_REGISTRY: ${{secrets.PSYCHEDELIC_GH_NPM_REGISTRY}}

      - name: NFID FRONTEND | deploy
        run: |

          # install local to generate the types
          npx env-cmd -f .env.production nx run-many --target=build --configuration=production --projects=nfid-demo,nfid-frontend --skip-nx-cache

          dfx identity use action
          dfx deploy --network ic nfid-frontend --no-wallet
          dfx deploy --network ic nfid-demo --no-wallet

        env:
          CURRCONV_TOKEN: ${{secrets.CURRCONV_TOKEN}}
          ETHERSCAN_API_KEY: ${{secrets.ETHERSCAN_API_KEY}}
          GOERLI_ALCHEMY_API_KEY: ${{secrets.GOERLI_ALCHEMY_API_KEY}}
          RARIBLE_X_API_KEY: ${{secrets.RARIBLE_X_API_KEY}}
          PROD_RARIBLE_X_API_KEY: ${{secrets.PROD_RARIBLE_X_API_KEY}}
          ETH_ALCHEMY_API_KEY: ${{secrets.ETH_ALCHEMY_API_KEY}}
          MATIC_ALCHEMY_API_KEY: ${{secrets.MATIC_ALCHEMY_API_KEY}}
          MUMBAI_ALCHEMY_API_KEY: ${{secrets.MUMBAI_ALCHEMY_API_KEY}}
          RAMP_WALLET_API_KEY: ${{secrets.RAMP_WALLET_API_KEY}}
          REACT_APP_SENTRY_CONNECTION: ${{secrets.PROD_SENTRY_CONNECTION}}
          USERGEEK_API_KEY: ${{secrets.PROD_USERGEEK_API_KEY}}
          PSYCHEDELIC_GH_NPM_REGISTRY: ${{secrets.PSYCHEDELIC_GH_NPM_REGISTRY}}
          BLOCK_CYPHER_TOKEN: ${{secrets.BLOCK_CYPHER_TOKEN}}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT_NFID }}
          SENTRY_LOG_LEVEL: ${{ secrets.SENTRY_LOG_LEVEL }}
        with:
          environment: production
          sourcemaps: ./build/static/js

  update_sdk:
    needs: deploy
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CI repo.
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: internet-identity-labs/ci_libs
          ref: main
          path: ci_libs

      - name: Checkout nfid-frontend repo.
        uses: actions/checkout@v3
        with:
          path: nfid-frontend

      - name: Building example.
        run: |
          source ./ci_libs/CI_LIBS.sh

          pushd ./nfid-frontend > /dev/null

          ci_echo_info "Building example" >&2
          yarn
          npx nx build:example nfid-frontend

      - name: Checkout nfid-sdk repo.
        uses: actions/checkout@v3
        with:
          repository: internet-identity-labs/NFID-SDK
          ref: main
          path: nfid-sdk

      - name: Updating files for PR.
        run: |
          source ./ci_libs/CI_LIBS.sh

          ci_echo_info "Cleaning data in nfid-sdk/build/nfid/build/" >&2
          rm -rf  nfid-sdk/build/nfid/build/

          ci_echo_info "Put new data to nfid-sdk/build/nfid/build/" >&2
          cp -Rf ./nfid-frontend/build/ nfid-sdk/build/nfid/

      - name: Creating PR.
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PAT }}
          commit-message: "chore: update nfid-frontend build"
          title: "chore: update nfid-frontend build"
          branch: chore/update-nfid-frontend-build
          path: nfid-sdk
