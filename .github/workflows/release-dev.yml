name: DEV Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - main
  repository_dispatch:
    types:
      - sdk-ts_event
       
jobs:
  check-secrets:
    defaults:
      run:
        shell: bash

    runs-on: ubuntu-latest

    steps:
      - name: Checkout CI repo.
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: internet-identity-labs/ci_libs
          ref: main
          path: ci_libs

      - name: Check secrets
        run: |
          source ./ci_libs/CI_LIBS.sh
          JSON='${{ toJSON(env) }}'
          ci_check_secrets "${JSON}"
        env:
          USERGEEK_API_KEY: ${{secrets.PROD_USERGEEK_API_KEY}}
          ETHERSCAN_API_KEY: ${{secrets.ETHERSCAN_API_KEY}}
          GOERLI_ALCHEMY_API_KEY: ${{secrets.GOERLI_ALCHEMY_API_KEY}}
          RARIBLE_X_API_KEY: ${{secrets.RARIBLE_X_API_KEY}}
          PROD_RARIBLE_X_API_KEY: ${{secrets.PROD_RARIBLE_X_API_KEY}}
          ETH_ALCHEMY_API_KEY: ${{secrets.ETH_ALCHEMY_API_KEY}}
          MATIC_ALCHEMY_API_KEY: ${{secrets.MATIC_ALCHEMY_API_KEY}}
          MUMBAI_ALCHEMY_API_KEY: ${{secrets.MUMBAI_ALCHEMY_API_KEY}}
          RAMP_WALLET_API_KEY: ${{secrets.RAMP_WALLET_API_KEY}}
          PSYCHEDELIC_GH_NPM_REGISTRY: ${{secrets.PSYCHEDELIC_GH_NPM_REGISTRY}}
          BLOCK_CYPHER_TOKEN: ${{secrets.BLOCK_CYPHER_TOKEN_DEV}}

  deploy:
    needs: check-secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout CI repo.
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: internet-identity-labs/ci_libs
          ref: main
          path: ci_libs

      - name: Checkout nfid-frontend repo.
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "yarn"

      - uses: aviate-labs/setup-dfx@v0.2.4
        with:
          dfx-version: 0.13.1
          dfx-disable-encryption: true
        env:
          DFX_IDENTITY_PEM: ${{ secrets.GH_MP_ADMIN_PEM }}

      - name: SDK-TS | Checkout sdk-ts repo.
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          repository: internet-identity-labs/sdk-ts
          ref: main
          path: sdk-ts

      - name: SDK-TS | build
        working-directory: ./sdk-ts
        run: |
          source ../ci_libs/CI_LIBS.sh
          ci_echo_debug "npx nx build embed" >&2
          npx nx build embed

      - name: SDK-TS | Create link to packages
        working-directory: ./sdk-ts
        run: |
          source ../ci_libs/CI_LIBS.sh
          ci_echo_debug "yarn link" >&2
          yarn link

      - name: NFID FRONTEND | install & format check
        run: |
          source ./ci_libs/CI_LIBS.sh

          ci_echo_info "Preparing .npmrc" >&2
          cat > ~/.npmrc << EOF
          @psychedelic:registry=https://npm.pkg.github.com
          //npm.pkg.github.com/:_authToken=${PSYCHEDELIC_GH_NPM_REGISTRY}
          EOF

          ci_echo_info "Yarn link ..." >&2
          ci_echo_debug "yarn link @nfid/embed" >&2
          yarn link @nfid/embed

          ci_echo_info "Yarn ..." >&2
          yarn
        env:
          PSYCHEDELIC_GH_NPM_REGISTRY: ${{secrets.PSYCHEDELIC_GH_NPM_REGISTRY}}

      - name: NFID FRONTEND | deploy
        run: |
          source ./ci_libs/CI_LIBS.sh
          ci_echo_info "NPX ..." >&2
          ci_echo_debug "npx env-cmd -f .env.staging nx build nfid-demo" >&2
          npx env-cmd -f .env.staging nx build nfid-demo

          ci_echo_info "DFX Deploy ..." >&2
          ci_echo_debug "dfx identity use action" >&2
          dfx identity use action

          ci_echo_debug "dfx deploy --network dev nfid-demo --no-wallet" >&2
          dfx deploy --network dev nfid-demo --no-wallet

        env:
          IS_DEV: true
          IC_HOST: https://ic0.app
          ETHERSCAN_API_KEY: ${{secrets.ETHERSCAN_API_KEY}}
          GOERLI_ALCHEMY_API_KEY: ${{secrets.GOERLI_ALCHEMY_API_KEY}}
          RARIBLE_X_API_KEY: ${{secrets.RARIBLE_X_API_KEY}}
          PROD_RARIBLE_X_API_KEY: ${{secrets.PROD_RARIBLE_X_API_KEY}}
          ETH_ALCHEMY_API_KEY: ${{secrets.ETH_ALCHEMY_API_KEY}}
          MATIC_ALCHEMY_API_KEY: ${{secrets.MATIC_ALCHEMY_API_KEY}}
          MUMBAI_ALCHEMY_API_KEY: ${{secrets.MUMBAI_ALCHEMY_API_KEY}}
          RAMP_WALLET_API_KEY: ${{secrets.RAMP_WALLET_API_KEY}}
          REACT_APP_SENTRY_CONNECTION: ${{secrets.DEV_SENTRY_CONNECTION}}
          USERGEEK_API_KEY: ${{secrets.PROD_USERGEEK_API_KEY}}
          PSYCHEDELIC_GH_NPM_REGISTRY: ${{secrets.PSYCHEDELIC_GH_NPM_REGISTRY}}
          BLOCK_CYPHER_TOKEN: ${{secrets.BLOCK_CYPHER_TOKEN_DEV}}
