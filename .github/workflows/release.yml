name: Deployment
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Running Yarn prettier
        run:

      - uses: aviate-labs/setup-dfx@v0.2.3
        with:
          dfx-version: 0.9.3
        env:
          DFX_IDENTITY_PEM: ${{ secrets.GH_MP_ADMIN_PEM }}

      - name: NFID FRONTEND | install & format check
        run: |
          yarn
          yarn prettier --check "src/**/*.{ts,tsx}"

      - name: NFID FRONTEND | deploy
        run: |

          # install local to generate the types
          dfx start --clean --background
          dfx deploy --no-wallet
          dfx stop

          # On main branch build on ic
          if [[ ${GITHUB_REF} == "refs/heads/main" ]]; then
            dfx identity use action
            dfx deploy --network ic  --no-wallet
          fi

        env:
          FRONTEND_MODE: production
          BACKEND_MODE: PRODUCTION
          II_MODE: production
          IC_HOST: https://ic0.app
          DFX_NETWORK: ic
          IDENTITY_MANAGER_CANISTER_ID_PRODUCTION: ${{secrets.PROD_CANISTER_ID_IDENTITY_MANAGER}}
          PUB_SUB_CHANNEL_CANISTER_ID_PRODUCTION: ${{secrets.PROD_CANISTER_ID_PUB_SUB_CHANNEL}}
          VERIFIER_CANISTER_ID_PROD: ${{secrets.PROD_CANISTER_ID_VERIFIER}}
          INTERNET_IDENTITY_CANISTER_ID_PRODUCTION: ${{secrets.PROD_CANISTER_ID_INTERNET_IDENTITY}}
          IM_ADDITION_CANISTER_ID_PRODUCTION: ${{secrets.PROD_CANISTER_ID_IM_ADDITION}}
          AWS_VERIFY_PHONENUMBER: ${{secrets.PROD_AWS_VERIFY_PHONENUMBER}}
          AWS_SIGNIN_GOOGLE: ${{secrets.PROD_AWS_SIGNIN_GOOGLE}}
          GOOGLE_CLIENT_ID: ${{secrets.PROD_GOOGLE_CLIENT_ID}}
          USERGEEK_API_KEY: ${{secrets.PROD_USERGEEK_API_KEY}}

      - name: Create Sentry release
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT_NFID }}
          SENTRY_LOG_LEVEL: ${{ secrets.SENTRY_LOG_LEVEL }}
        with:
          environment: production
          sourcemaps: ./build/static/js
